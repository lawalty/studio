
'use server';
/**
 * @fileOverview A flow to test the core text generation functionality.
 * This is a minimal test to see if we can connect to a Gemini model.
 *
 * - testTextGeneration - A function that calls the text generation model.
 * - TestTextGenerationOutput - The return type.
 */
import { ai } from '@/ai/genkit';
import { gemini15Flash } from '@genkit-ai/googleai';
import { z } from 'genkit';

const TestTextGenerationOutputSchema = z.object({
  success: z.boolean().describe('Indicates if the generation was successful.'),
  error: z.string().optional().describe('An error message if the test failed.'),
  generatedText: z.string().optional().describe('The text generated by the model.'),
});
export type TestTextGenerationOutput = z.infer<typeof TestTextGenerationOutputSchema>;

export async function testTextGeneration(): Promise<TestTextGenerationOutput> {
  return testTextGenerationFlow();
}

const testTextGenerationFlow = ai.defineFlow(
  {
    name: 'testTextGenerationFlow',
    inputSchema: z.void(),
    outputSchema: TestTextGenerationOutputSchema,
  },
  async () => {
    try {
      // The model is now pre-configured in genkit.ts to use GOOGLE_AI_API_KEY.
      const model = gemini15Flash;

      const result = await ai.generate({
        model: model,
        prompt: 'Tell me a one-sentence joke.',
      });

      const text = result.text;

      if (text) {
        return {
          success: true,
          generatedText: text,
        };
      } else {
        const fullResponse = JSON.stringify(result, null, 2);
        return {
          success: false,
          error: `The text generation service returned a successful but empty response. This may indicate a problem with your API key or billing. Full response: ${fullResponse}`,
        };
      }
    } catch (e: any) {
      console.error('[testTextGenerationFlow] Full exception object caught:', JSON.stringify(e, Object.getOwnPropertyNames(e), 2));
      const errorMessage = `The test failed with an unexpected exception: ${e.message || 'Unknown error'}. This often points to an issue with your GOOGLE_AI_API_KEY, API enablement, or billing. Full details: ${JSON.stringify(e, Object.getOwnPropertyNames(e), 2)}`;
      return {
          success: false,
          error: errorMessage,
      };
    }
  }
);
