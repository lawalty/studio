'use server';
/**
 * @fileOverview A flow to test the core text generation functionality.
 * This is a minimal test to see if we can connect to a Gemini model.
 *
 * - testTextGeneration - A function that calls the text generation model.
 * - TestTextGenerationOutput - The return type.
 */
import { ai } from '@/ai/genkit';
import { z } from 'zod';


const TestTextGenerationOutputSchema = z.object({
  success: z.boolean().describe('Indicates if the generation was successful.'),
  error: z.string().optional().describe('An error message if the test failed.'),
  generatedText: z.string().optional().describe('The text generated by the model.'),
});
export type TestTextGenerationOutput = z.infer<typeof TestTextGenerationOutputSchema>;

const testTextGenerationFlow = ai.defineFlow(
  {
    name: 'testTextGenerationFlow',
    inputSchema: z.void(),
    outputSchema: TestTextGenerationOutputSchema,
  },
  async () => {
    try {
      const { text } = await ai.generate({
          model: 'googleai/gemini-1.5-flash',
          prompt: 'Tell me a one-sentence joke.',
      });

      if (text) {
        return {
          success: true,
          generatedText: text,
        };
      } else {
        return {
          success: false,
          error: `The text generation service returned a successful but empty response.`,
        };
      }
    } catch (e: any) {
        console.error('[testTextGenerationFlow] Exception caught:', e);
        const rawError = e instanceof Error ? e.message : JSON.stringify(e);
        let detailedError: string;

        if (rawError.includes("PROJECT_BILLING_NOT_ENABLED")) {
            detailedError = `CRITICAL: The text generation feature failed because billing is not enabled for your Google Cloud project. Please go to your Google Cloud Console, select the correct project, and ensure that a billing account is linked.`;
        } else if (rawError.includes("Could not refresh access token") || (e.name === 'TypeError' && rawError.includes('Headers.append'))) {
            detailedError = `CRITICAL: The text generation test failed with a Google Cloud internal error, likely due to a project configuration issue. Please check the following: 1) Propagation Time: If you just enabled billing or APIs, it can take 5-10 minutes to activate. Please try again in a few minutes. 2) API Key: Ensure the Google AI API Key saved in the admin panel is correct and from the right project. 3) API Status: Double-check that the 'Vertex AI API' is enabled in the Google Cloud Console for this project.`;
        } else if (rawError.includes('permission denied') || rawError.includes('IAM')) {
            detailedError = `The text generation test failed due to a permissions issue. Please check that the App Hosting service account has the required IAM roles (e.g., Vertex AI User) and that the necessary Google Cloud APIs are enabled.`;
        } else {
            detailedError = `The text generation test failed. This is most often caused by a missing or invalid Google AI API Key. Please go to the Admin Console -> API Keys & Services page to verify your key is correct and saved. Also ensure the 'Vertex AI API' is enabled in your Google Cloud project.`;
        }
        
        return { success: false, error: detailedError };
    }
  }
);
  
export async function testTextGeneration(): Promise<TestTextGenerationOutput> {
  return testTextGenerationFlow();
}
